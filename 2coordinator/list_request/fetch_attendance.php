<?php
session_start();
include("../../0config/database.php");

if (!isset($_SESSION['user_id'])) {
    echo json_encode(['error' => 'Unauthorized']);
    exit();
}

$user_id = $_SESSION['user_id'];

// Fetch the logged-in user's institute
$sql_user = "SELECT institute FROM users WHERE users_id = ?";
$stmt_user = $conn->prepare($sql_user);
$stmt_user->bind_param("i", $user_id);
$stmt_user->execute();
$user = $stmt_user->get_result()->fetch_assoc();
$user_institute = $user['institute'];
$stmt_user->close();

if (!$user_institute) {
    echo json_encode(['error' => 'User institute not found']);
    exit();
}

// Fetch attendance data where institute matches
$sql = "SELECT a.attendance_id, a.school_id, a.first_name, a.middle_name, a.last_name, a.sex, a.course, a.email, 
               a.selfie_image_path, a.ip_address, a.device_info, a.timestamp, a.scanned_timestamp, 
               a.scanned_by_ip_address, a.scanned_by_device_info
        FROM attendance a
        WHERE a.institute = ?";
$stmt = $conn->prepare($sql);
$stmt->bind_param("s", $user_institute);
$stmt->execute();
$result = $stmt->get_result();

$attendance_data = [];
while ($row = $result->fetch_assoc()) {
    // Format full name with prefix based on sex
    $prefix = ($row['sex'] === 'Male') ? 'Mr. ' : ($row['sex'] === 'Female' ? 'Ms. ' : '');
    $middle_initial = !empty($row['middle_name']) ? strtoupper(substr($row['middle_name'], 0, 1)) . '.' : '';
    $full_name = $prefix . htmlspecialchars($row['first_name'] . ' ' . $middle_initial . ' ' . $row['last_name']);

    // Format timestamps
    $registered_on = !empty($row['timestamp']) ? date('M d, Y - h:iA', strtotime($row['timestamp'])) : '-';
    $validated_on = !empty($row['scanned_timestamp']) ? date('M d, Y - h:iA', strtotime($row['scanned_timestamp'])) : '-';

    // Check for similar device usage
    $remarks = '';
    $sql_check = "SELECT COUNT(*) as count FROM attendance 
                  WHERE (ip_address = ? OR device_info = ?) 
                  AND attendance_id != ?";
    $stmt_check = $conn->prepare($sql_check);
    $stmt_check->bind_param("ssi", $row['ip_address'], $row['device_info'], $row['attendance_id']);
    $stmt_check->execute();
    $check_result = $stmt_check->get_result()->fetch_assoc();
    if ($check_result['count'] > 0) {
        $remarks = "Similar device used for registration; QR generated by student. Confirm if for self or others, or if device was shared.";
    }
    $stmt_check->close();

    $attendance_data[] = [
        'attendance_id' => $row['attendance_id'],
        'school_id' => htmlspecialchars($row['school_id']),
        'full_name' => $full_name,
        'course' => htmlspecialchars($row['course'] ?? '-'),
        'email' => htmlspecialchars($row['email']),
        'selfie_image_path' => !empty($row['selfie_image_path']) && file_exists(__DIR__ . "/../../" . $row['selfie_image_path']) 
            ? "../../" . htmlspecialchars($row['selfie_image_path']) 
            : "../../resources/siplogo.png",
        'registered_on' => $registered_on,
        'validated_on' => $validated_on,
        'remarks' => $remarks
    ];
}

$stmt->close();
$conn->close();

echo json_encode(['data' => $attendance_data]);
?>